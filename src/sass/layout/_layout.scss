@use "sass:color";
@use "sass:math";
@use "../utils/variables" as vars;
@use "../utils/mixins" as *;

.layout {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.main-content {
  flex: 1; // Allows the main content to grow and push the footer down
  padding: 1rem 2rem; // Add some padding around the page content
  @include respond(medium) {
    padding-bottom: 10rem; // Space for the footer
  }
}

.main-container {
  max-width: vars.$container-max-width;
  margin: 0 auto;
  padding: (vars.$spacing-unit * 4) vars.$spacing-unit;
}

// Global Page Wrapper (Centers content)
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

// Header Wrapper (Centers nav and search bar)
.header-container {
  @extend .container;
  display: flex;
  align-items: center;
}

.site-header {
  background-color: vars.$secondary-color; // Or $primary-color if you prefer a more seamless look
  padding: vars.$spacing-unit vars.$spacing-unit * 2;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1000;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  nav {
    max-width: vars.$container-max-width;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;

    .nav-logo a {
      font-size: 1.5rem;
      font-weight: bold;
      color: vars.$accent-color;
      text-decoration: none;
      &:hover {
        color: color.adjust(vars.$accent-color, $lightness: 10%);
      }
    }

    .nav-links {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);

      @media (max-width: 768px) {
        position: static;
        transform: none;
        margin-left: auto;
        margin-right: vars.$spacing-unit;
      }

      li {
        margin-left: vars.$spacing-unit * 2;

        &:first-child {
          margin-left: 0;
        }

        a {
          color: vars.$text-color;
          text-decoration: none;
          font-size: 1.1rem;
          padding: math.div(vars.$spacing-unit, 2) vars.$spacing-unit;
          border-radius: 4px;
          transition: background-color 0.3s ease, color 0.3s ease;

          &:hover,
          &.active {
            color: vars.$primary-color;
            background-color: vars.$accent-color;
          }
        }
      }
    }

    .contact-icons {
      display: flex;
      gap: vars.$spacing-unit;

      .contact-icon {
        color: vars.$text-color;
        font-size: 1.3rem;
        padding: math.div(vars.$spacing-unit, 2);
        border-radius: 4px;
        transition: color 0.3s ease, transform 0.2s ease;

        &:hover {
          color: vars.$accent-color;
          transform: translateY(-2px);
        }
      }

      @media (max-width: 768px) {
        gap: math.div(vars.$spacing-unit, 2);

        .contact-icon {
          font-size: 1.2rem;
          padding: 0.3rem;
        }
      }
    }
  }
}

// Add padding to the top of the body/main content area to offset the fixed header
body {
  padding-top: 80px; // Adjust this based on your header's actual height
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.app-content {
  padding-top: 0; // Remove top padding since body already has it
  flex: 1; // Allows main content to grow and push footer down
}

// Section Styling (Consistent Page Spacing)
section {
  margin: 5px 0px 5px 0px;
  @include respond-min(xlarge) {
    margin: 10px 0px 15px 0px;
  }
}

// Responsive Grid System (Flexbox)
.grid {
  display: grid;
  gap: 20px;

  &.cols-2 {
    grid-template-columns: repeat(2, 1fr);
    width: 100%;
  }

  &.cols-3 {
    grid-template-columns: repeat(3, 1fr);
    width: 100%;
  }

  // Medium screens: Switch to 2 columns
  @include respond(medium) {
    &.cols-3 {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  // Small screens: Switch to 1 column
  @include respond(small) {
    &.cols-2,
    &.cols-3 {
      grid-template-columns: 1fr;
    }
  }
}

// Site Footer
.site-footer {
  background-color: vars.$secondary-color;
  margin-top: vars.$spacing-unit * 4;
  padding: vars.$spacing-unit * 2 0;
  border-top: 1px solid color.adjust(vars.$accent-color, $alpha: -0.7);

  .footer-content {
    max-width: vars.$container-max-width;
    margin: 0 auto;
    padding: 0 vars.$spacing-unit;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: vars.$spacing-unit;

    @media (max-width: 768px) {
      flex-direction: column;
      text-align: center;
      gap: math.div(vars.$spacing-unit, 2);
    }

    p {
      color: vars.$text-color-secondary;
      margin: 0;
      font-size: 0.9rem;

      @media (max-width: 768px) {
        font-size: 0.85rem;
      }
    }

    .footer-contact {
      display: flex;
      gap: vars.$spacing-unit;

      .footer-contact-icon {
        color: vars.$text-color-secondary;
        font-size: 1.2rem;
        padding: math.div(vars.$spacing-unit, 2);
        border-radius: 4px;
        transition: color 0.3s ease, transform 0.2s ease;

        &:hover {
          color: vars.$accent-color;
          transform: translateY(-2px);
        }
      }
    }
  }
}
